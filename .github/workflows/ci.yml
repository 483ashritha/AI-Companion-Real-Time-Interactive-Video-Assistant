name: CI Pipeline

on: [push, pull_request]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7
        ports: ['6379:6379']
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install backend dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run backend tests
        working-directory: ./backend
        env:
          REDIS_URL: redis://localhost:6379/0
          PYTHONPATH: ${{ github.workspace }}/backend
        run: |
          echo "PYTHONPATH set to $PYTHONPATH"
          pytest -q

  frontend-unit-tests:
    runs-on: ubuntu-latest
    needs: backend-tests
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install frontend deps
        working-directory: ./frontend
        run: |
          npm ci --no-audit --no-fund || npm install
      - name: Run frontend unit tests
        working-directory: ./frontend
        run: |
          npm test

  frontend-e2e:
    runs-on: ubuntu-latest
    needs: frontend-unit-tests
    services:
      backend:
        image: python:3.11-slim
        ports: ['8000:8000']
        options: >-
          --entrypoint /bin/sh
        env:
          REDIS_URL: redis://localhost:6379/0
        volumes:
          - ./:/workspace
        # Start backend in background
        run: echo "starting backend placeholder"
    steps:
      - uses: actions/checkout@v4
      - name: Start backend (Docker Compose)
        run: |
          docker-compose up -d --build
      - name: Wait for services
        run: |
          sleep 8
      - name: Run Cypress tests
        uses: cypress-io/github-action@v4
        with:
          browser: chrome
          start: npm --prefix frontend run dev
          wait-on: 'http://localhost:3000'
          working-directory: ./frontend

  docker-publish:
    runs-on: ubuntu-latest
    needs: [frontend-e2e]
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_TOKEN }}
      - name: Build and push backend image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/ai-companion-backend:latest ./backend
          docker tag ghcr.io/${{ github.repository_owner }}/ai-companion-backend:latest ghcr.io/${{ github.repository_owner }}/ai-companion-backend:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/ai-companion-backend:latest
          docker push ghcr.io/${{ github.repository_owner }}/ai-companion-backend:${{ github.sha }}
      - name: Build and push frontend image
        run: |
          docker build -t ghcr.io/${{ github.repository_owner }}/ai-companion-frontend:latest ./frontend
          docker tag ghcr.io/${{ github.repository_owner }}/ai-companion-frontend:latest ghcr.io/${{ github.repository_owner }}/ai-companion-frontend:${{ github.sha }}
          docker push ghcr.io/${{ github.repository_owner }}/ai-companion-frontend:latest
          docker push ghcr.io/${{ github.repository_owner }}/ai-companion-frontend:${{ github.sha }}
